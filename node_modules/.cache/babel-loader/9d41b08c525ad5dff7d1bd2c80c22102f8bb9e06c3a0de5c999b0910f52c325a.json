{"ast":null,"code":"var _jsxFileName = \"/Users/macpuk/Desktop/Work/marvel/my-app/src/components/randomChar/RandomChar.js\";\nimport { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../error/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RandomChar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      char: {},\n      loading: true,\n      error: false,\n      showRandomCharTry: true\n    };\n    this.marvelService = new MarvelService();\n    this.onCharLoaded = char => {\n      this.setState({\n        char,\n        loading: false\n      });\n    };\n    this.onError = () => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n    this.updateChar = () => {\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n      this.marvelService.getCharacter(id).then(this.onCharLoaded).catch(this.onError);\n    };\n    this.toggleRandomCharTry = () => {\n      this.setState(state => {\n        return {\n          showRandomCharTry: !state.showRandomCharTry\n        };\n      });\n    };\n    this.updateChar();\n    // setInterval(this.updateChar, 3000);\n  }\n\n  render() {\n    const {\n      char,\n      loading,\n      error\n    } = this.state;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 36\n    }, this) : null;\n    const content = !(loading || error) ? /*#__PURE__*/_jsxDEV(View, {\n      char: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 47\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__static\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 52\n          }, this), \"Do you want to get to know him better?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: \"Or choose another one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            onClick: this.toggleRandomCharTry,\n            children: \"try it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mjolnir,\n          alt: \"mjolnir\",\n          className: \"randomchar__decoration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst View = _ref => {\n  let {\n    char\n  } = _ref;\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki\n  } = char;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: \"Random character\",\n      className: \"randomchar__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_c = View;\nexport default RandomChar;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["Component","Spinner","ErrorMessage","MarvelService","mjolnir","RandomChar","constructor","props","state","char","loading","error","showRandomCharTry","marvelService","onCharLoaded","setState","onError","updateChar","id","Math","floor","random","getCharacter","then","catch","toggleRandomCharTry","render","errorMessage","spinner","content","View","name","description","thumbnail","homepage","wiki"],"sources":["/Users/macpuk/Desktop/Work/marvel/my-app/src/components/randomChar/RandomChar.js"],"sourcesContent":["import { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../error/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nclass RandomChar extends Component{\n    constructor(props) {\n        super(props);\n        this.updateChar();\n        // setInterval(this.updateChar, 3000);\n\n    }\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n        showRandomCharTry: true,\n    }\n\n    marvelService = new MarvelService();\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onError = () => {\n        this.setState({ loading: false, error: true})\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    toggleRandomCharTry = () => {\n        this.setState((state) => {\n            return {\n                showRandomCharTry: !state.showRandomCharTry\n            }\n        })\n    }\n\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ?  <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div className=\"inner\" onClick={this.toggleRandomCharTry}>try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name,description,thumbnail,homepage,wiki} = char;\n\n    return(\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}